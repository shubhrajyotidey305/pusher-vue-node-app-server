{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row\"\n};\nconst _hoisted_2 = {\n  class: \"chat-box\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Transaction History\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"chats\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"wallet\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"name\"\n};\nconst _hoisted_7 = {\n  class: \"amount\"\n};\nconst _hoisted_8 = {\n  class: \"amount\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, \"Hello, \" + _toDisplayString(_ctx.sender), 1\n  /* TEXT */\n  ), _hoisted_3, _createElementVNode(\"ul\", _hoisted_4, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chats, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"col\",\n      key: item\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"strong\", null, \"From : \" + _toDisplayString(item.sender), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_7, \"Amount : Rs \" + _toDisplayString(item.rupee), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_8, \"Time : \" + _toDisplayString(item.time), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.rupee = $event),\n    placeholder: \"Enter amount here\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.rupee, void 0, {\n    lazy: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.time = $event),\n    placeholder: \"Enter time of Transaction\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.time, void 0, {\n    lazy: true\n  }]]), _createElementVNode(\"button\", {\n    class: \"button-submit\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args))\n  }, \"Send\")])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCAETC,oBAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,EAAuB;AAAA;AAAvB;;;EACID,KAAK,EAAC;;;gCACRC,oBAAmB,GAAnB,EAAmB;EAAhBC,EAAE,EAAC;AAAa,CAAnB,EAAc,IAAd,EAAc;AAAA;AAAd;;;EAEOF,KAAK,EAAC;;;EAGNA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;uBAXnBG,oBAkBM,KAlBN,cAkBM,CAjBJF,oBAgBM,KAhBN,cAgBM,CAfJA,oBAA4B,IAA5B,EAA4B,IAA5B,EAAI,YAAOG,iBAAGC,WAAH,CAAX,EAAoB;EAAA;EAApB,CAeI,EAdJC,UAcI,EAbJL,oBASK,IATL,cASK,CARHM,UAQG,qBAPHJ,oBAMKK,SANL,EAMK,IANL,EAMKC,YAN0BJ,UAM1B,EANkBK,IAAa,IAAT;yBAA3BP,oBAMK,IANL,EAMK;MANDH,KAAK,EAAC,KAML;MANkCW,GAAG,EAAED;IAMvC,CANL,GACET,oBAEM,KAFN,cAEM,CADJA,oBAAyC,QAAzC,EAAyC,IAAzC,EAAQ,YAAOG,iBAAGM,IAAI,CAACE,MAAR,CAAf,EAA6B;IAAA;IAA7B,CACI,CAFN,GAGAX,oBAAsD,KAAtD,cAAoB,iBAAYG,iBAAGM,IAAI,CAACG,KAAR,CAAhC,EAA6C;IAAA;IAA7C,GACAZ,oBAAgD,KAAhD,cAAoB,YAAOG,iBAAGM,IAAI,CAACI,IAAR,CAA3B,EAAuC;IAAA;IAAvC,EALF;GAMK,CANL;;EAAA,CAOG,EATL,CAaI,kBAHJb,oBAA0E,OAA1E,EAA0E;IAAnEc,IAAI,EAAC,MAA8D;+DAAzCV,aAAKW,OAAoC;IAAlCC,WAAW,EAAC;EAAsB,CAA1E;;EAAA,kBAAiCZ;UAAd;MAGf,kBAFJJ,oBAAgF,OAAhF,EAAgF;IAAzEc,IAAI,EAAC,MAAoE;+DAA/CV,YAAIW,OAA2C;IAAzCC,WAAW,EAAC;EAA6B,CAAhF;;EAAA,kBAAiCZ;UAAd;MAEf,EADJJ,oBAAiE,QAAjE,EAAiE;IAAzDD,KAAK,EAAC,eAAmD;IAAlCkB,OAAK,yCAAEb,+CAAF;EAA6B,CAAjE,EAAoD,MAApD,CACI,CAhBN,CAiBI,CAlBN","names":["class","_createElementVNode","id","_createElementBlock","_toDisplayString","_ctx","_hoisted_3","_hoisted_5","_Fragment","_renderList","item","key","sender","rupee","time","type","$event","placeholder","onClick"],"sourceRoot":"","sources":["D:\\VS code Files\\real time vue pusher\\vue-project\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"chat-box\">\n      <h3>Hello, {{ sender }}</h3>\n      <h2>Transaction History</h2>\n      <ul class=\"chats\">\n        <p id=\"wallet\"></p>\n        <li class=\"col\" v-for=\"item in chats\" :key=\"item\">\n          <div class=\"name\">\n            <strong>From : {{ item.sender }}</strong>\n          </div>\n          <div class=\"amount\">Amount : Rs {{ item.rupee }}</div>\n          <div class=\"amount\">Time : {{ item.time }}</div>\n        </li>\n      </ul>\n      <input type=\"text\" v-model.lazy=\"rupee\" placeholder=\"Enter amount here\" />\n      <input type=\"text\" v-model.lazy=\"time\" placeholder=\"Enter time of Transaction\"/>\n      <button class=\"button-submit\" @click=\"handleSubmit\">Send</button>\n    </div>\n  </div>\n</template>\n<script>\nvar wallet= 0;\nimport Pusher from \"pusher-js\";\n// import axios from \"axios\";\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      rupee: \"\",\n      time: \"\",\n      chats: [],\n    };\n  },\n  props: {\n    sender: (),\n  },\n  methods: {\n    subscribe() {\n      const pusher = new Pusher(\"503c295a8c71896beade\", {\n        cluster: \"mt1\",\n        authEndpoint: 'http://localhost:8000/pusher/user-auth',\n      });\n      this.channel = pusher.subscribe('private-my_channel');\n      this.channel.bind('client-my_event', (msg) => {\n        const newObj = JSON.parse(JSON.stringify(msg));\n        this.chats = [...this.chats, newObj];\n      });\n    },\n      handleSubmit(e) {\n      e.preventDefault();\n      const payload = {\n        sender: this.sender,\n        rupee: this.rupee,\n        time: this.time,\n      };\n        wallet = wallet+ parseInt(payload.rupee);\n        document.getElementById(\"wallet\").innerHTML = payload.sender+' wallet = Rs '+ wallet;\n      \n      // axios.post(`http://localhost:5000/message/${this.room}`, payload);\n      var wasTriggered = this.channel.trigger(\"client-my_event\", payload);\n      console.log(wasTriggered);\n      this.chats = [...this.chats, payload];\n      this.rupee = \"\";\n      this.time= \"\";\n    },\n  },\n  created() {\n    this.subscribe();\n  },\n};\n</script> "]},"metadata":{},"sourceType":"module"}