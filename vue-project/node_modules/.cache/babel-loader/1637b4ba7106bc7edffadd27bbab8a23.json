{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport Pusher from 'pusher-js';\nexport default {\n  name: 'App',\n\n  setup() {\n    const username = ref('username');\n    const messages = ref([]);\n    const amount = ref('');\n    const date = ref('');\n    const authUrl = 'http://localhost:8000/pusher/user-auth';\n    onMounted(() => {\n      Pusher.logToConsole = true;\n      const pusher = new Pusher('503c295a8c71896beade', {\n        cluster: 'mt1',\n        authEndpoint: authUrl,\n        auth: {\n          headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Bearer '\n          }\n        } // authorizer: (socketId, callback) => {\n        //   fetch(authUrl, {\n        //     method: \"POST\",\n        //     headers: new Headers({ \"Content-Type\": \"application/json\" }),\n        //     body: JSON.stringify({\n        //       socket_id: socketId,\n        //       channel_name: channel.name\n        //     })\n        //   })\n        //     .then(res => {\n        //       if (!res.ok) {\n        //         throw new Error(`Received ${res.statusCode} from ${authUrl}`);\n        //       }\n        //       return res.json();\n        //     })\n        //     .then(data => {\n        //       callback(null, data);\n        //     })\n        //     .catch(err => {\n        //       callback(new Error(`Error calling auth endpoint: ${err}`), {\n        //         auth: \"\"\n        //       });\n        //     });\n        // }\n\n      });\n      const channel = pusher.subscribe('private-my_channel');\n      channel.bind('my_event', data => {\n        messages.value.push(data);\n      });\n    });\n\n    const submit = async () => {\n      await fetch('http://localhost:8000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username.value,\n          amount: amount.value,\n          date: date.value\n        })\n      });\n      amount.value = '';\n      date.value = '';\n    };\n\n    return {\n      username,\n      amount,\n      date,\n      messages,\n      submit\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAyBA,SAASA,GAAT,EAAcC,SAAd,QAA+B,KAA/B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,eAAe;EACbC,IAAI,EAAE,KADO;;EAEbC,KAAK,GAAG;IACN,MAAMC,QAAO,GAAIL,GAAG,CAAC,UAAD,CAApB;IACA,MAAMM,QAAO,GAAIN,GAAG,CAAC,EAAD,CAApB;IACA,MAAMO,MAAK,GAAIP,GAAG,CAAC,EAAD,CAAlB;IACA,MAAMQ,IAAG,GAAIR,GAAG,CAAC,EAAD,CAAhB;IACA,MAAMS,OAAM,GAAI,wCAAhB;IACAR,SAAS,CAAC,MAAM;MACdC,MAAM,CAACQ,YAAP,GAAsB,IAAtB;MACA,MAAMC,MAAK,GAAI,IAAIT,MAAJ,CAAW,sBAAX,EAAmC;QAChDU,OAAO,EAAE,KADuC;QAEhDC,YAAY,EAAEJ,OAFkC;QAGhDK,IAAI,EAAC;UACTC,OAAO,EAAC;YACN,UAAS,kBADH;YAEN,iBAAiB;UAFX;QADC,CAH2C,CAShD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MAhCgD,CAAnC,CAAf;MAkCA,MAAMC,OAAM,GAAIL,MAAM,CAACM,SAAP,CAAiB,oBAAjB,CAAhB;MACAD,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyBC,IAAG,IAAK;QAC/Bb,QAAQ,CAACc,KAAT,CAAeC,IAAf,CAAoBF,IAApB;MACD,CAFD;IAGD,CAxCQ,CAAT;;IAyCA,MAAMG,MAAK,GAAI,YAAY;MACzB,MAAMC,KAAK,CAAC,oCAAD,EAAuC;QAChDC,MAAM,EAAE,MADwC;QAEhDT,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFuC;QAGhDU,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBtB,QAAQ,EAAEA,QAAQ,CAACe,KADA;UAEnBb,MAAM,EAAEA,MAAM,CAACa,KAFI;UAGnBZ,IAAI,EAAEA,IAAI,CAACY;QAHQ,CAAf;MAH0C,CAAvC,CAAX;MASAb,MAAM,CAACa,KAAP,GAAe,EAAf;MACAZ,IAAI,CAACY,KAAL,GAAa,EAAb;IACF,CAZA;;IAaA,OAAO;MACLf,QADK;MAELE,MAFK;MAGLC,IAHK;MAILF,QAJK;MAKLgB;IALK,CAAP;EAOF;;AArEa,CAAf","names":["ref","onMounted","Pusher","name","setup","username","messages","amount","date","authUrl","logToConsole","pusher","cluster","authEndpoint","auth","headers","channel","subscribe","bind","data","value","push","submit","fetch","method","body","JSON","stringify"],"sourceRoot":"","sources":["D:\\VS code Files\\real time vue pusher\\vue-project\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"d-flex flex-column align-items-stretch flex-shrink-0 bg-white\">\n      <div class=\"d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom\">\n        <input class=\"fs-5 fw-semibold\" v-model=\"username\" />\n      </div>\n      <div class=\"list-group list-group-flush border-bottom scrollarea\">\n        <div class=\"list-group-item list-group-item-action py-3 lh-tight\" v-for=\"message in messages\" :key=\"message\">\n          <div class=\"d-flex w-100 align-items-center justify-content-between\">\n            <strong class=\"mb-1\">{{ message.username }}</strong>\n          </div>\n          <div class=\"col-10 mb-1 small\">{{ message.amount }}</div>\n          <div class=\"col-10 mb-1 small\">{{ message.date }}</div>\n        </div>\n\n      </div>\n    </div>\n    <form @submit.prevent=\"submit\">\n      <input class=\"form-control\" placeholder=\"Write a message\" v-model=\"amount\" />\n      <input class=\"form-control\" placeholder=\"Write a message\" v-model=\"date\" />\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport Pusher from 'pusher-js';\nexport default {\n  name: 'App',\n  setup() {\n    const username = ref('username');\n    const messages = ref([]);\n    const amount = ref('');\n    const date = ref('');\n    const authUrl = 'http://localhost:8000/pusher/user-auth'\n    onMounted(() => {\n      Pusher.logToConsole = true;\n      const pusher = new Pusher('503c295a8c71896beade', {\n        cluster: 'mt1',        \n        authEndpoint: authUrl,\n        auth:{\n    headers:{\n      'Accept':'application/json',\n      'Authorization': 'Bearer ' \n    }\n  }\n        // authorizer: (socketId, callback) => {\n        //   fetch(authUrl, {\n        //     method: \"POST\",\n        //     headers: new Headers({ \"Content-Type\": \"application/json\" }),\n        //     body: JSON.stringify({\n        //       socket_id: socketId,\n        //       channel_name: channel.name\n        //     })\n        //   })\n        //     .then(res => {\n        //       if (!res.ok) {\n        //         throw new Error(`Received ${res.statusCode} from ${authUrl}`);\n        //       }\n        //       return res.json();\n        //     })\n        //     .then(data => {\n        //       callback(null, data);\n        //     })\n        //     .catch(err => {\n        //       callback(new Error(`Error calling auth endpoint: ${err}`), {\n        //         auth: \"\"\n        //       });\n        //     });\n        // }\n      });\n      const channel = pusher.subscribe('private-my_channel');\n      channel.bind('my_event', data => {\n        messages.value.push(data);\n      });\n    })\n    const submit = async () => {\n      await fetch('http://localhost:8000/api/messages', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username: username.value,\n          amount: amount.value,\n          date: date.value,\n        })\n      })\n      amount.value = '';\n      date.value = '';\n    }\n    return {\n      username,\n      amount,\n      date,\n      messages,\n      submit\n    }\n  }\n}\n</script>\n\n<style>\n.scrollarea {\n  min-height: 500px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}