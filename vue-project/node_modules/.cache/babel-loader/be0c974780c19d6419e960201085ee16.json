{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex flex-column align-items-stretch flex-shrink-0 bg-white\"\n};\nconst _hoisted_3 = {\n  class: \"d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"Transaction History\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"list-group list-group-flush border-bottom scrollarea\"\n};\nconst _hoisted_7 = {\n  class: \"d-flex w-100 align-items-center justify-content-between\"\n};\nconst _hoisted_8 = {\n  class: \"mb-1\"\n};\nconst _hoisted_9 = {\n  class: \"col-10 mb-1 small\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"date\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"fs-5 fw-semibold\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.username]]), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.submit && $setup.submit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    placeholder: \"Enter Amount\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.amount = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.amount]])], 32\n  /* HYDRATE_EVENTS */\n  )]), _hoisted_4, _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"list-group-item list-group-item-action py-3 lh-tight\",\n      key: message\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"strong\", _hoisted_8, \"Sender's Name: \" + _toDisplayString(message.username), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_9, \"Amount of Transaction: Rs \" + _toDisplayString(message.amount), 1\n    /* TEXT */\n    ), _hoisted_10]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCAOXC,oBAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,EAAuB;AAAA;AAAvB;;gCACAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EACKD,KAAK,EAAC;;;EAEFA,KAAK,EAAC;;;EACDA,KAAK,EAAC;;;EAEXA,KAAK,EAAC;;;iCACXC,oBAAiB,GAAjB,EAAiB;EAAdC,EAAE,EAAC;AAAW,CAAjB,EAAY,IAAZ,EAAY;AAAA;AAAZ;;;uBAjBRC,oBAsBM,KAtBN,cAsBM,CArBJF,oBAoBM,KApBN,cAoBM,CAnBJA,oBAMM,KANN,cAMM,iBALJA,oBAAqD,OAArD,EAAqD;IAA9CD,KAAK,EAAC,kBAAwC;+DAAZI,kBAAQC;EAAI,CAArD;;EAAA,kBAAyCD,kBAKrC,EAJJH,oBAGO,MAHP,EAGO;IAHAK,QAAM,wDAAUF,uCAAV,EAAgB,WAAhB;EAGN,CAHP,mBACEH,oBAA0E,OAA1E,EAA0E;IAAnED,KAAK,EAAC,cAA6D;IAA9CO,WAAW,EAAC,cAAkC;+DAAVH,gBAAMC;EAAI,CAA1E;;EAAA,kBAAgED,iBADlE;;EAAA,CAII,CANN,CAmBI,EAZJI,UAYI,EAXJC,UAWI,EAVJR,oBASM,KATN,cASM,oBARJE,oBAMMO,SANN,EAMM,IANN,EAMMC,YAN8EP,eAM9E,EANmEQ,OAAmB,IAAZ;yBAAhFT,oBAMM,KANN,EAMM;MANDH,KAAK,EAAC,sDAML;MANyFa,GAAG,EAAED;IAM9F,CANN,GACEX,oBAEM,KAFN,cAEM,CADJA,oBAAmE,QAAnE,cAAqB,oBAAea,iBAAGF,OAAO,CAACG,QAAX,CAApC,EAAuD;IAAA;IAAvD,CACI,CAFN,GAGAd,oBAAmF,KAAnF,cAA+B,+BAA0Ba,iBAAGF,OAAO,CAACI,MAAX,CAAzD,EAA0E;IAAA;IAA1E,GACAC,YALF;GAMM,CANN;;EAAA,CAQI,EATN,CAUI,CApBN,CAqBI,CAtBN","names":["class","_createElementVNode","id","_createElementBlock","$setup","$event","onSubmit","placeholder","_hoisted_4","_hoisted_5","_Fragment","_renderList","message","key","_toDisplayString","username","amount","_hoisted_10"],"sourceRoot":"","sources":["D:\\VS code Files\\real time vue pusher\\vue-project\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"d-flex flex-column align-items-stretch flex-shrink-0 bg-white\">\n      <div class=\"d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom\">\n        <input class=\"fs-5 fw-semibold\" v-model=\"username\" />\n        <form @submit.prevent=\"submit\">\n          <input class=\"form-control\" placeholder=\"Enter Amount\" v-model=\"amount\" />\n\n        </form>\n      </div>\n      <h5>Transaction History</h5>\n      <br>\n      <div class=\"list-group list-group-flush border-bottom scrollarea\">\n        <div class=\"list-group-item list-group-item-action py-3 lh-tight\" v-for=\"message in messages\" :key=\"message\">\n          <div class=\"d-flex w-100 align-items-center justify-content-between\">\n            <strong class=\"mb-1\">Sender's Name: {{ message.username }}</strong>\n          </div>\n          <div class=\"col-10 mb-1 small\">Amount of Transaction: Rs {{ message.amount }}</div>\n          <p id=\"date\"></p>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport Pusher from 'pusher-js';\nexport default {\n  name: 'App',\n  setup() {\n    const username = ref('username');\n    const messages = ref([]);\n    const amount = ref('');\n    const authUrl = 'http://localhost:8000/pusher/user-auth'\n    onMounted(() => {\n      Pusher.logToConsole = true;\n      const pusher = new Pusher('503c295a8c71896beade', {\n        cluster: 'mt1',\n        authEndpoint: authUrl,\n      });\n      const channel = pusher.subscribe('private-my_channel');\n      channel.bind('my_event', data => {\n        console.log(data.message);\n        messages.value.push(data);\n      });\n      \n    })\n    const submit = async () => {\n      await fetch('http://localhost:8000/api/messages', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username: username.value,\n          amount: amount.value\n        })\n      })\n      channel.trigger('client-my_event', {\n        'rupee': '1000',\n        'sender': 'Ajay',\n        'time': '10:00'\n      })\n      amount.value = '';\n      var n = new Date();\n      var y = n.getFullYear();\n      var m = n.getMonth() + 1;\n      var d = n.getDate();\n      document.getElementById(\"date\").innerHTML = \"Date of Transaction :\" + m + \"/\" + d + \"/\" + y;\n    }\n    return {\n      username,\n      messages,\n      amount,\n      submit\n    }\n  }\n}\n</script>\n\n<style>\n.scrollarea {\n  min-height: 500px;\n}\n\nh5 {\n  font-size: large;\n}\n</style>"]},"metadata":{},"sourceType":"module"}